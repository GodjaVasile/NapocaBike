@page
@model NapocaBike.Pages.BikeParkings.IndexModel

@{
    ViewData["Title"] = "Available Parking Spaces";
}



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Available NapocaBike Parkings in Cluj-Napoca</title>
    <link rel="stylesheet" href="~/css/BikeParkingsListStyle.css">
    <script src="scripts.js" defer></script>
</head>
<body>
    <header>
        <h1>Available NapocaBike Parkings in Cluj-Napoca</h1>
        <p>Find the perfect bike parking location based on your security needs and location.</p>
    </header>
    <form method="get">
    <div class="form-group">
        <label>Capacity:</label>
        <input type="number" name="CapacityFilter" class="form-control" value="@Model.CapacityFilter" />
    </div>
    <div class="form-group">
        <label>SecurityLevel:</label>
        <input type="number" name="SecurityFilter" class="form-control" value="@Model.SecurityFilter" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary" asp-page-handler="filter">Filter</button>
        <a asp-page="./Index" class="btn btn-secondary ml-2">Clear</a>
    </div>
</form>
    <section id="map" style="height: 400px;"></section>

    <section>
        <h2>Security Levels</h2>
        <ul>
            <li>Level 1: Basic security - simple bike racks, minimal surveillance</li>
            <li>Level 2: Moderate security - secure bike racks, some surveillance</li>
            <li>Level 3: High security - locked bike rooms, cameras, and/or on-site staff</li>
            <li>Level 4: Very high security - card access control, individual bike lockers</li>
            <li>Level 5: Maximum security - advanced access control, monitored 24/7, bike valet service</li>
        </ul>
    </section>

    
</body>
</html>





@section Scripts {
    <script>
        var map;
        var currentLocationMarker;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 46.770439, lng: 23.591423 },
                zoom: 12
            });

          

                
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                alert("Geolocation is not supported by this browser.");
            }

            function createContent(name, capacity, securityLevel) {
                var content = '<div class="marker-title">' + name + '<br />Capacitate: ' + capacity + '<br />Securitylevel: ' + securityLevel + '</div>';
                return content;
            }

            function OpenMarkerDetails(content, map, marker) {
                var infowindow = new google.maps.InfoWindow({
                    content: content
                });
                infowindow.open(map, marker);
            }

        @foreach (var item in Model.BikeParking)
        {
            <text>
                    (function () {
                        var content = createContent('@item.Name', '@item.Capacity', '@item.SecurityLevel');

                        var marker = new google.maps.Marker({
                            position: { lat: @item.Latitude, lng: @item.Longitude },
                            map: map,
                            icon: {
                                    url: "/Icons/parking-sign.png",
                                     scaledSize: new google.maps.Size(32, 32) // specify the size of the icon
                                   },
                        });

                        marker.addListener('click', function () { OpenMarkerDetails(content, map, marker); });
                    })();
            </text>
        }
                            }


        function showPosition(position) {
            var lat = position.coords.latitude;
            var lng = position.coords.longitude;

            currentLocationMarker = new google.maps.Marker({
                position: { lat: lat, lng: lng },
                map: map,
                icon: {
                    url: "/Icons/person.png",
                    scaledSize: new google.maps.Size(32, 32) // specify the size of the icon
                },
                title: "Your Current Location"
            });

            map.setCenter({ lat: lat, lng: lng });
            map.setZoom(15);
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCzHZqkegdjz_xvNtEuYReEdgrPi1PFmbk&callback=initMap&v=weekly" async defer></script>
}
